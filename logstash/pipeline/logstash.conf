input {
  tcp {
    port => 5000
    type => nginx_access
  }
  udp {
    port => 5000
    type => nginx_access
  }
}

filter {
  if [type] == "nginx_access" {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{IPORHOST:visitor_ip} - %{USERNAME:remote_user} \[%{HTTPDATE:time_local}\] \"%{DATA:server_name}\" \"%{DATA:method} %{URIPATHPARAM:path} HTTP/%{NUMBER:http_version}\" %{INT:status} %{INT:body_bytes_sent} (?:\"(?:%{URI:referrer}|-)\"|\"%{DATA:referrer}\") \"%{DATA:user_agent}\" %{NUMBER:request_time} (%{BASE16FLOAT:upstream_response_time}|-)" }
      remove_tag => ["nginx_access", "_grokparsefailure"]
      remove_field => ["program"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    document_type => "nginx_access"
    manage_template => true
    template_overwrite => true
    template => "/usr/share/logstash/pipeline/template/es_template.json"
    index => "logstash-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}